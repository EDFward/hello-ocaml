#directory "_build";;
#load "data.cmo";;
#load "exercise2.cmo";;

open Data
open Exercise2

module StringOrdered = struct
  type t = string
  let eq = String.equal
  let lt s1 s2 = String.compare s1 s2 = -1
  let leq s1 s2 = String.compare s1 s2 != 1
end


module StringSet = OptimizedSet(StringOrdered)

let make_range i j =
  let rec aux n acc =
    if n < i then acc else aux (n-1) (n::acc)
  in aux j []

let range = make_range 1 100
let shuffle = List.sort (fun _ _ -> (Random.int 3) - 1)
let random_range = shuffle range
let make_set_from_int_list range = 
  List.fold_left (fun acc i -> StringSet.insert i acc) StringSet.empty
    (List.map string_of_int range)
let sample_unbalanced_set = make_set_from_int_list range
let sample_balanced_set = make_set_from_int_list random_range
